@charset "UTF-8";

body, header {
    font-family: Arial, Helvetica, sans-serif;
    margin: 0px;
    background: #f7f7f7; 
    display: grid; /* Iniciando o grid */
    gap: 60px; /* Separando os elementos */
    justify-items: center; /* Deixando TODA A PÁGINA no centro, e não permitindo que os itens do resto da pagina se estenda muito, vai ser apenas o máximo do conteúdo dele. */
    margin-top: 60px; /* Criando uma distância do topo da página */
}

.menu {
    display: flex; /* Removeu todos os espaços dos links deixando tudo inline ao deixar só display: flex; */
    flex-wrap: wrap; /* Ao diminuir o tamanho da pagina, o conteúdo do menu ira quebrar. */
    justify-content: center; /* Sempre vai alinhar o conteudo do menu no centro, mesmo após a quebra ao diminuir a pagina. */
    gap: 20px; /* Separou os itens igualmente em 20px */
}

.menu a {
    background: #ffff;
    padding: 15px 30px;
    border-radius: 5px;
    color: #000000;
    text-transform: uppercase; /* Coloca tudo em letra maiusculo */
}

.menu a:hover{
    background-color: rgba(172, 171, 171, 0.535);
    border: 1px solid black;
    margin: -1px; /* Fez a página parar de "tremer" ao passar o cursor em cima */
}

.conteudo {
    display: grid; /* Inicia o grid. */
    grid-template-columns: 1fr 1fr; /* Dividi o Grid de Conteudo em 2 colunas */
    max-width: 1000px;
    position: relative;
}

.introducao {
    background: #fff;
    padding: 40px; /* Desgrudando toda a introducao do canto. */
    text-align: right; /* Alinhando o texto na direita. */
    display: grid; /* Vai considerar toda a introducao como grid */
    gap: 20px; /* Separando todo o meu conteudo igualmente. */
    align-content: center; /* Alinhou todo o conteudo de introducao no centro. */
    justify-items: end; /* Alinhou tudo no canto e fez o botão parar de ficar imenso */
}

.introducao::before {
    content:""; /* Regra principal do pseudoelemento, ele sempre deve ter um conteúdo, se não ele não irá aparecer. */
    width: 60px;
    height: 4px;
    background: #e21;
    display: inline-block; /* Define um bloco em linha para nosso detalhe. */
    position: absolute; /* É necessário o position: relative (elemento pai) para que meu detalhe não fique no topo da pagina */
    top: 30px;
    right: 470px;
}

.subtitulo {
    font-size: 64px;
    text-transform: uppercase;
    color: rgba(0, 0, 0, 0.2);
    text-align: right;
    padding: 40px;
    align-self: center; /* Alinha apenas UM ITEM e nesse caso, no centro. */
}

.vantagens {
    background: #fff;
    padding: 40px;
}

.vantagens-item {
    display: grid;
    grid-template-columns: auto 1fr; /* Auto é o valor que só pega o tamanho do conteúdo, poderia dar um valor fixo também, exemplo: 40px que ele também iria ficar alinhado. E o que sobrar será 1fr. */ 
    gap: 10px 20px; /* O primeiro valor é a distancia entre as linhas e o segundo é a distancia entre as colunas. */
    padding: 20px;
}

.vantagens-item p {
    grid-column: 2; /* Criou 2 colunas. */
}

footer > .rodape {
    width: 100%; /* Cuidado para não somar com o padding. Pois width sempre irá somar com padding, nesse caso ficar 100% + 40px. */
    background: #fff;
    text-align: center;
    padding: 30px;
    box-sizing: border-box; /* Vai falar para o rodapé respeitar apenas o tamanho do width. */
}

h1 {
    font-size: 35px;
}
img {
    max-width: 100%; /* Não deixando a imagem ficar maior que a tela */
    display: block; /* Renderizando o elemento como bloco */
}

a {
    text-decoration: none; /* Removendo todos os sublinhados dos links do site. */
}

a#botao {
    background: #ee2211;
    color: #fff;
    padding: 15px 30px;
    border-radius: 5px;
    text-transform: uppercase; 
}

a#botao:hover {
    background-color: red;
}

p, h1, h2, h3 {
    margin: 0px; /* Deixando tudo junto */
}